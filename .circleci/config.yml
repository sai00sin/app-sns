# version: 2.1
# jobs:
#  build:
#     docker:
#       - image: circleci/node:9.8.0-stretch-browsers
#       - image: circleci/python:3.7
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: Docker Compose をインストール
#           command: |
#             curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#             chmod +x ~/docker-compose
#             sudo mv ~/docker-compose /usr/local/bin/docker-compose
#       - run:
#           name: docker-compose build
#           command:
#             docker-compose -f ./docker-compose.yml build
#       - run:
#           name: テスト
#           command: |
#             docker-compose run backend ls
#             docker-compose run backend python manage.py makemigrations




# version: 2.1
# jobs:
#   build:
#     machine: true
#     steps:
#       - checkout
#       - run:
#           name: docker-compose build
#           command:
#             docker-compose -f ./docker-compose.yml build
#       - run:
#           name: テスト
#           command: |
#             docker-compose run backend python manage.py test



version: 2.1
jobs:
  build1:
    docker:
      - image: circleci/ruby:2.4-node
      - image: circleci/postgres:9.4.12-alpine
    steps:
      - checkout
      - save_cache: # キャッシュキーで依存関係をキャッシュします。
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      paths:
            - ~/circleci-demo-workflows

  build2:
    docker:
      - image: circleci/ruby:2.4-node
      - image: circleci/postgres:9.4.12-alpine
    steps:
      - restore_cache: # キャッシュされた依存関係を復元します。
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: テストを実行
          command: make test

workflows:
  version: 2
  build_and_test: # ワークフロー名
    jobs:
      - build1
      - build2




